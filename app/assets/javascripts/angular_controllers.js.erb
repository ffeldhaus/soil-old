'use strict';

/* Controllers */

function SoilCtrl($scope, $location, $dialog, $resource, $log, $timeout) {

    $scope.rounds = [];

    var Groups = $resource('/groups/:group_id', {group_id: '@id'});
    var Rounds = $resource('/rounds/:round_id', {round_id: '@id'}, { update: {method: 'PUT'}});

    $scope.getGroups = function () {
        $scope.groups = Groups.query()
    }

    $scope.getGroup = function (group) {
        $scope.group = Groups.get({group_id: group}, function () {
            $scope.currentRound = $scope.group.rounds[$scope.group.rounds.length - 1].number;
            $scope.getRound($scope.group.rounds.length);
            if ($scope.group.wait_for_other_groups) $scope.wait_for_other_groups();
        });
    }

    $scope.getRound = function (round) {
        if (!$scope.rounds[round - 1]) $scope.rounds[round - 1] = Rounds.get({round_id: $scope.group.rounds[round - 1].id});
    };

    $scope.wait_for_other_groups = function () {
        $log.info('Wait for others');
        $scope.startNewRound = false;

        var t = '<div ng-show="!startNewRound" class="modal-header">' +
                '<h1>Auf andere Gruppen warten</h1>' +
                '</div>' +
                '<div ng-show="startNewRound" class="modal-header">' +
                '<h1>Beginn von Runde {{$scope.currentRound}}</h1>' +
                '</div>' +
                '<div ng-show="startNewRound" class="modal-footer">' +
                '<button ng-click="close()" class="btn btn-primary" >Close</button>' +
                '</div>';

        $scope.opts = {
            backdrop: true,
            dialogFade: true,
            keyboard: false,
            backdropClick: false,
            template: t // OR: templateUrl: 'path/to/view.html',
        };

        var dialog = $dialog.dialog($scope.opts);
        dialog.open().then();

        (function tick() {
            $scope.group = Groups.get({group_id: $scope.group.id}, function ($scope) {
                if ($scope.group.wait_for_other_groups) {
                    $timeout(tick, 1000)
                }
                else {
                    $log.info('Start new Round');
                    $scope.$apply('startNewRound=true');
                }
            });
        })();

        $scope.close = function () {
            dialog.close();
        };
    };

    $scope.percentages = ['0%', '10%', '20%', '30%', '40%', '50%'];

    $scope.endRound = function () {
        if ($location.url() == '/endRound' && $scope.currentRound == $scope.rounds.length) {
            $scope.endRoundAcknowledgement()
        }
        ;
    }

    $scope.endRoundAcknowledgement = function () {
        var title = 'Runde beenden';
        var msg = 'Soll die Runde wirklich beendet und die Angaben abgeschickt werden?';
        var btns = [
            {result: 'cancel', label: 'Abbrechen'},
            {result: 'send', label: 'Runde beenden', cssClass: 'btn-primary'}
        ];

        $dialog.messageBox(title, msg, btns)
                .open()
                .then(function (result) {
                    if (result == 'send') {
                        $scope.rounds[$scope.rounds.length - 1].$update();
                        $scope.wait_for_other_groups();
                    }
                });
    }
}

SoilCtrl.$inject = ['$scope', '$location', '$dialog', '$resource', '$log', '$timeout'];

// the dialog is injected in the specified controller
function selectPlantationCtrl($scope, dialog) {
    $scope.plantations = [
        'Ackerbohne', 'Gerste', 'Hafer', 'Kartoffel', 'Mais', 'Roggen', 'Weizen', 'Zuckerruebe', 'Tiere', 'Brachland'
    ];

    $scope.click = function (plantation) {
        dialog.close(plantation);
    }
}

selectPlantationCtrl.$inject = ['$scope', 'dialog'];