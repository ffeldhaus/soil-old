'use strict';

/* Controllers */

function AdminCtrl($scope, $resource, $log, $location) {
    var Games = $resource('/games/:game_id', {game_id: '@id'});
    var Supervisors = $resource('/supervisors/:supervisor_id', {supervisor_id: '@id'});

    $scope.games = Games.query();
    $scope.supervisors = Supervisors.query();

    $scope.getSupervisor = function (id) {
        return Supervisors.get({supervisor_id: id})
    };

    $scope.show = function () {
        return ($location.search()).show;
    };

    $scope.supervisor = {};
    $scope.supervisor.first_name = '';
    $scope.supervisor.last_name = '';
    $scope.supervisor.email = '';

    $scope.createSupervisor = function (supervisor) {
        Supervisors.save(supervisor);
        $scope.supervisors = Supervisors.query();
    };

    $scope.deleteSupervisor = function (supervisor) {
        Supervisors.delete({supervisor_id: supervisor.id});
        $scope.supervisors = Supervisors.query();
    };
}

AdminCtrl.$inject = ['$scope', '$resource', '$log', '$location'];

function GamesCtrl($scope, $resource, $log, $location) {
    var Games = $resource('/games/:game_id', {game_id: '@id'});
    $scope.games = Games.query();
    $scope.game = {};
    $scope.game.name = '';
    $scope.game.supervisor_id = null;

    function Player() {
        this.name = '';
        this.password = Math.random().toString(36).slice(-8);
    }

    $scope.game.players = [new Player(), new Player(), new Player(), new Player()];

    $scope.setPlayerSize = function (size) {
        if ($scope.game.players.length < size) {
            $scope.game.players.push(new Player(size));
        }
        else if ($scope.game.players.length > size) {
            $scope.game.players.pop();
        }
    }

    $scope.createGame = function (game) {
        Games.save(game);
        $scope.games = Games.query();
    };

    $scope.deleteGame = function (game) {
        Games.delete({game_id: game.id});
        $scope.games = Games.query();
    };

}

GamesCtrl.$inject = ['$scope', '$resource', '$log', '$location'];

function SoilCtrl($scope, $location, $dialog, $resource, $log, $filter, $q, checkForNewRounds) {

    var Games = $resource('/games/:game_id', {game_id: '@id'});

    $scope.initialize = function (game_id, player_id) {
        $scope.selectedRound = 1;
        $scope.game_id = game_id;
        $scope.player_id = player_id;
        $scope.getGame(game_id, player_id);
    };

    $scope.getButtonText = function () {
        if ($scope.round.submitted) {
            return 'Auf andere Gruppen warten ...'
        } else if ($scope.gameOver) {
            return 'Ende des Spiels!'
        }
        else {
           return  'Runde abschicken Â»'
        }
    };

    $scope.getGame = function () {
        var deferred = $q.defer;
        $log.debug("Getting game with id: " + $scope.game_id);
        Games.get({game_id: $scope.game_id}, function (response) {
            $scope.game = response;
            $scope.player = $scope.game.players.filter(function (player) {
                return player.id == $scope.player_id;
            })[0];
            $scope.rounds = $filter('orderBy')($scope.player.rounds, 'number');
            $scope.round = $scope.rounds[$scope.rounds.length - 1];
            $scope.selectedRound = $scope.player.rounds.length;
            if ($scope.round.number < 8) {
                if (typeof $scope.checkForNewRounds === 'undefined') {
                    $scope.checkForNewRounds = checkForNewRounds;
                    $scope.checkForNewRounds.setScope($scope);
                    $scope.checkForNewRounds.query();
                } else {
                    $scope.startNewRound();
                }
            } else {
                $scope.endGame();
                $scope.gameOver = true;
            }
        });
    };

    $scope.startNewRound = function () {
        var opts = {
            backdrop: true,
            dialogFade: true,
            keyboard: true,
            backdropClick: true,
            templateUrl: "<%= asset_path('newRound.html') %>",
            controller: 'NewRoundCtrl',
            resolve: {
                round: function () {
                    return angular.copy($scope.round);
                },
                game: function () {
                    return angular.copy($scope.game);
                },
                player: function () {
                    return angular.copy($scope.player);
                }
            }
        };

        var dialog = $dialog.dialog(opts);
        dialog.open();
    };

    $scope.endGame = function () {
        var opts = {
            backdrop: true,
            dialogFade: true,
            keyboard: true,
            backdropClick: true,
            templateUrl: "<%= asset_path('endGame.html') %>",
            controller: 'EndGameCtrl',
            resolve: {
                round: function () {
                    return angular.copy($scope.round);
                },
                game: function () {
                    return angular.copy($scope.game);
                },
                player: function () {
                    return angular.copy($scope.player);
                }
            }
        };

        var dialog = $dialog.dialog(opts);

        dialog.open();
    };

    $scope.endRound = function () {
        var opts = {
            backdrop: true,
            dialogFade: true,
            keyboard: true,
            backdropClick: true,
            templateUrl: "<%= asset_path('endRound.html') %>",
            controller: 'EndRoundCtrl',
            resolve: {
                round: function () {
                    return angular.copy($scope.round);
                },
                game: function () {
                    return angular.copy($scope.game);
                },
                player: function () {
                    return angular.copy($scope.player);
                }
            }
        };

        var dialog = $dialog.dialog(opts);

        if ($scope.selectedRound == $scope.player.rounds.length && !$scope.gameOver && !$scope.round.submitted) {
            dialog.open().then(function (submitted) {
                if (submitted) {
                    $scope.round.submitted = true;
                }
            });
        }
    }
}

SoilCtrl.$inject = ['$scope', '$location', '$dialog', '$resource', '$log', '$filter', '$q', 'checkForNewRounds'];

// the dialog is injected in the specified controller
function SelectPlantationCtrl($scope, $log, dialog) {
    $scope.plantations = [
        'Ackerbohne', 'Gerste', 'Hafer', 'Kartoffel', 'Mais', 'Roggen', 'Weizen', 'Zuckerruebe', 'Tiere', 'Brachland'
    ];

    $scope.click = function (plantation) {
        dialog.close(plantation);
    }

    $scope.close = function () {
        dialog.close();
    }
}

SelectPlantationCtrl.$inject = ['$scope', '$log', 'dialog'];

// the dialog is injected in the specified controller
function EndRoundCtrl($scope, $resource, dialog, game, player, round) {

    $scope.percentages = ['0%', '10%', '20%', '30%', '40%', '50%'];
    $scope.round = round;
    $scope.round.decision.machines = "0%";
    $scope.close = function (submitted) {
        dialog.close(submitted);
    };

    $scope.submitRound = function () {
        var Rounds = $resource('/games/:game_id/players/:player_id/rounds/:round_id', {game_id: game.id, player_id: player.id, round_id: round.id}, { update: { method: 'PUT' } });
        Rounds.update($scope.round);
        $scope.close(true);
    }
}

EndRoundCtrl.$inject = ['$scope', '$resource', 'dialog', 'game', 'player', 'round'];

function NewRoundCtrl($scope, dialog, round) {
    $scope.round = round;
    $scope.close = function () {
        dialog.close();
    };
}

NewRoundCtrl.$inject = ['$scope', 'dialog', 'round'];

function EndGameCtrl($scope, dialog, round) {
    $scope.round = round;
    $scope.close = function () {
        dialog.close();
    };
}

EndGameCtrl.$inject = ['$scope', 'dialog', 'round'];
